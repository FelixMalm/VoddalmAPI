@page "/UpdateHousing/{HousingId:int}"
@using System.Net.Http
@using System.Text.Json
@using VoddalmBlazor.Models
@using System.Collections.Generic 
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
<!-- Author Kim Jonsson -->

<h4>Update Your House</h4>

@if (housing != null)
{
    <div class="container">
        <form @onsubmit="HandleSubmit">

            <div class="form-group">
                <label for="address">Address</label>
                <input type="text" class="form-control" id="address" @bind="housing.address" required>
            </div>
            <div class="form-group">
                <label for="initialPrice">Initial Price</label>
                <input type="number" class="form-control" id="initialPrice" @bind="housing.initialPrice" required>
            </div>
            <div class="form-group">
                <label for="livingArea">Living Area</label>
                <input type="number" class="form-control" id="livingArea" @bind="housing.livingArea">
            </div>
            <div class="form-group">
                <label for="additionalArea">Additional Area</label>
                <input type="number" class="form-control" id="additionalArea" @bind="housing.additionalArea">
            </div>
            <div class="form-group">
                <label for="plotArea">Plot Area</label>
                <input type="number" class="form-control" id="plotArea" @bind="housing.plotArea">
            </div>
            <div class="form-group">
                <label for="description">Description</label>
                <textarea class="form-control" id="description" @bind="housing.description"></textarea>
            </div>
            <div class="form-group">
                <label for="numberOfRooms">Number of Rooms</label>
                <input type="number" class="form-control" id="numberOfRooms" @bind="housing.numberOfRooms">
            </div>
            <div class="form-group">
                <label for="monthlyFee">Monthly Fee</label>
                <input type="number" class="form-control" id="monthlyFee" @bind="housing.monthlyFee">
            </div>
            <div class="form-group">
                <label for="annualOperatingCost">Annual Operating Cost</label>
                <input type="number" class="form-control" id="annualOperatingCost" @bind="housing.annualOperatingCost">
            </div>
            <div class="form-group">
                <label for="yearBuilt">Year Built</label>
                <input type="number" class="form-control" id="yearBuilt" @bind="housing.yearBuilt">
            </div>
            <div class="form-group" style="display:none;">
                <label for="isActive">Is Active</label>
                <input type="checkbox" id="IsActive" @bind="housing.IsActive">
            </div>

            <div class="form-group">
                <label for="images">Images (URLs)</label>
                <input type="text" class="form-control" id="images" @bind="imageUrls" />
            </div>
            <div class="form-group">
                <label for="categoryId">Category</label>
                <select class="form-control" id="categoryId" @bind="housing.categoryId">
                    @if (housingList != null)
                    {
                        @foreach (var category in housingList.DistinctBy(b => b.categoryId))
                        {
                            <option value="@category.id">@category.category.name</option>
                        }
                    }
                </select>
            </div>

            <div class="form-group">
                <label for="municipalityId">Municipality</label>
                <select class="form-control" id="municipalityId" @bind="housing.municipalityId">
                    @if (housingList != null)
                    {
                        @foreach (var municipality in housingList.DistinctBy(b => b.municipalityId))
                        {
                            <option value="@municipality.id">@municipality.municipality.name</option>
                        }
                    }
                </select>
            </div>

            
            <button type="submit" class="btn btn-primary">Update Housing</button>

            
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger mt-3" role="alert">
                    @errorMessage
                </div>
            }
        </form>
    </div>
}

@code {
    private Housing housing = new Housing { IsActive = true };

    private string errorMessage;
    private List<Broker> brokers;
    private List<Housing> housingList;
    private string imageUrls; 

    [Parameter]
    public int HousingId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        
        brokers = await httpClient.GetFromJsonAsync<List<Broker>>("https://localhost:7046/api/Broker");
        housingList = await httpClient.GetFromJsonAsync<List<Housing>>("https://localhost:7046/api/Housings");

        try
        {
            
            housing = await httpClient.GetFromJsonAsync<Housing>($"https://localhost:7046/api/Housings/{HousingId}");

            
            imageUrls = housing.images != null ? string.Join(",", housing.images) : "";
        }
        catch (Exception ex)
        {
            
            NavigationManager.NavigateTo("/error");
        }
    }

    private async Task HandleSubmit()
    {
        try
        {
            
            var updatedImageUrls = imageUrls.Split(',', StringSplitOptions.RemoveEmptyEntries);

            
            housing.images = updatedImageUrls.ToList();

            HttpResponseMessage response = await httpClient.PutAsJsonAsync($"https://localhost:7046/api/Housings/{housing.id}", housing);
            response.EnsureSuccessStatusCode(); 

            
            errorMessage = "Housing details updated successfully!";
            NavigationManager.NavigateTo("/BrokerLoggedIn");
        }
        catch (Exception ex)
        {
            
            errorMessage = ex.Message;
        }
    }
}
