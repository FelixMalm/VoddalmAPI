@page "/register"
@using VoddalmBlazor.Models
@using BlazorWasmAuthentication.Services
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager

<div class="register-container">
    <EditForm Model="@registerModel" OnValidSubmit="RegisterAsync">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="Name">Name:</label>
            <InputText type="Name" @bind-Value="@registerModel.Name" id="Name" name="Name" class="form-control" required />
            <ValidationMessage For="@(() => registerModel.Name)" />
        </div>
        <div class="form-group">
            <label for="Email">Email:</label>
            <InputText @bind-Value="@registerModel.Email" id="Email" name="Email" class="form-control" required />
            <ValidationMessage For="@(() => registerModel.Email)" />
        </div>
        <div class="form-group">
            <label for="password">Password:</label>
            <InputText type="password" @bind-Value="@registerModel.Password" id="password" name="password" class="form-control" required />
            <ValidationMessage For="@(() => registerModel.Password)" />
        </div>
        <div class="form-group">
            <label for="ConfirmPassword">Confirm Password:</label>
            <InputText type="password" @bind-Value="@registerModel.ConfirmPassword" id="ConfirmPassword" name="ConfirmPassword" class="form-control" required />
            <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary">Register</button>
        </div>
    </EditForm>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <p class="error">@errorMessage</p>
    }
</div>

@code {
    private RegisterModel registerModel = new RegisterModel();
    private string errorMessage;

    private async Task RegisterAsync()
    {
        try
        {
            await AuthenticationService.RegisterAsync(registerModel);
            NavigationManager.NavigateTo("/login");
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}
