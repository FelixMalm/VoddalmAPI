@page "/login"
@using VoddalmBlazor.Models
@using BlazorWasmAuthentication.Services
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager

<div class="login-container">
    <fieldset disabled="@(expiration is not null)">
        <EditForm Model="@model" OnValidSubmit="SubmitAsync">
            <div class="form-group">
                <label for="Email">Email:</label>
                <InputText @bind-Value="@model.Email" id="Email" name="Email" class="form-control" required />
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <InputText type="password" @bind-Value="@model.Password" id="password" name="password" class="form-control" required />
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Login</button>
            </div>
        </EditForm>
    </fieldset>

    @if (expiration is not null)
    {
        <p class="login-message">You are logged in until @expiration?.ToLongTimeString()</p>
    }

    @if (errorMessage is not null)
    {
        <p class="error">@errorMessage</p>
    }
</div>

@code {
    private LoginModel model = new LoginModel();
    private DateTime? expiration;
    private string? errorMessage;

    private async Task SubmitAsync()
    {
        try
        {
            expiration = await AuthenticationService.LoginAsync(model);

            errorMessage = null;

            NavigationManager.NavigateTo("/login");
        }
        catch (Exception ex)
        {
            expiration = null;

            errorMessage = ex.Message;
        }
    }
}
