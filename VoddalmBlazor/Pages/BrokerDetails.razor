@page "/BrokerDetails/{BrokerId}"
@using System.Net.Http
@using System.Text.Json
@using VoddalmBlazor.Models
@inject HttpClient httpClient
@inject NavigationManager navigationManager

@if (broker == null)
{
    <p>Loading...</p>
}
else
{
    <div class="container">
        
        <div class="broker-details">
            <div class="section">
                <div class="broker-info">
                    @if (!string.IsNullOrEmpty(broker.imageUrl))
                    {
                        <img src="@broker.imageUrl" alt="Broker Image" />
                    }
                    else
                    {
                        <p>No image available</p>
                    }
                    <div class="broker-text">
                        <ul>
                            <li><strong>Name:</strong> @broker.firstName @broker.lastName</li>
                            <li><strong>Email:</strong> @broker.email</li>
                            <li><strong>Phone Number:</strong> @broker.phoneNumber</li>
                            <li><strong>Agency:</strong> @broker.agency.name</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="associated-housings">
            <h4>Associated Housings</h4>
            <div class="housing-grid">
                @foreach (var housing in associatedHousings)
                {
                    <div class="housing-item">
                        <div class="housing-info">
                            <h5>Address: @housing.address</h5>
                            @if (housing.images != null && housing.images.Any())
                            {
                                <a href="@($"HousingDetails/{housing.id}")">
                                    <img src="@housing.images[0]" alt="Housing Image" />
                                </a>
                            }
                            else
                            {
                                <p>No image available</p>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}

<!-- Button to navigate to previous page -->
<button class="btn btn-primary" @onclick="NavigateBack">Back</button>

@code {
    private Broker broker;
    private List<Housing> associatedHousings;

    [Parameter]
    public string BrokerId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(BrokerId))
        {
            string id = BrokerId;

            try
            {
                broker = await httpClient.GetFromJsonAsync<Broker>($"https://localhost:7046/api/Broker/{id}");

                var housings = await httpClient.GetFromJsonAsync<List<Housing>>("https://localhost:7046/api/Housings");

                associatedHousings = housings.Where(h => h.brokerId.ToString() == id).ToList();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error fetching broker details: {ex.Message}");
            }
        }
    }

    // Method to navigate back to the previous page
    private void NavigateBack()
    {
        navigationManager.NavigateTo("brokers");
    }
}
