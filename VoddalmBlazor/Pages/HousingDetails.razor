@page "/HousingDetails/{HousingId}"
@using System.Net.Http
@using System.Text.Json
@using VoddalmBlazor.Models
@inject HttpClient httpClient
@inject IJSRuntime JSRuntime


<div class="container">
    <div class="housing-details">
        @if (housing != null)
        {
            <div class="section">
                <h4>Property Details</h4>
                <div class="housing-info">
                    @if (!string.IsNullOrEmpty(housing.address))
                    {
                        <div class="detail">
                            <strong>Address:</strong> @housing.address
                        </div>
                    }
                    <div class="detail">
                        <strong>Initial Price:</strong> $@housing.initialPrice
                    </div>
                    <div class="detail">
                        <strong>Living Area:</strong> @housing.livingArea
                    </div>
                    <div class="detail">
                        <strong>Additional Area:</strong> @housing.additionalArea
                    </div>
                    <div class="detail">
                        <strong>Plot Area:</strong> @housing.plotArea
                    </div>
                    <div class="detail">
                        <strong>Description:</strong> @housing.description
                    </div>
                </div>

                <h4>Financial Details</h4>
                <div class="housing-info">
                    <div class="detail">
                        <strong>Monthly Fee:</strong> $@housing.monthlyFee
                    </div>
                    <div class="detail">
                        <strong>Annual Operating Cost:</strong> $@housing.annualOperatingCost
                    </div>
                </div>

                <h4>Other Details</h4>
                <div class="housing-info">
                    <div class="detail">
                        <strong>Number of Rooms:</strong> @housing.numberOfRooms
                    </div>
                    <div class="detail">
                        <strong>Year Built:</strong> @housing.yearBuilt
                    </div>
                    <div class="detail">
                        <strong>Category:</strong> @housing.category.name
                    </div>
                    <div class="detail">
                        <strong>Broker:</strong> @housing.broker.firstName @housing.broker.lastName
                    </div>
                    <div class="detail">
                        <strong>Municipality:</strong> @housing.municipality.name
                    </div>
                </div>
            </div>

            <div class="section">
                <h4>Images</h4>
                <button class="prev" @onclick="PrevSlide">❮</button>
                <button class="next" @onclick="NextSlide">❯</button>
                <div class="slider">
                    <div class="slides">
                        @if (housing.images != null && housing.images.Any())
                        {
                            <img src="@housing.images[currentImageIndex]" alt="Housing Image" class="slide housing-image">
                        }
                        else
                        {
                            <p>No images available</p>
                        }
                    </div>

                </div>
            </div>

        }
        else
        {
            <p>Loading...</p>
        }
    </div>
</div>

@code {
    private Housing housing;
    private int currentImageIndex = 0;

    [Parameter]
    public string HousingId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(HousingId) && int.TryParse(HousingId, out int id))
        {
            try
            {
                housing = await httpClient.GetFromJsonAsync<Housing>($"https://localhost:7046/api/Housings/{id}");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error fetching housing details: {ex.Message}");
            }
        }
    }

    private void PrevSlide()
    {
        currentImageIndex = (currentImageIndex - 1 + housing.images.Count) % housing.images.Count;
    }

    private void NextSlide()
    {
        currentImageIndex = (currentImageIndex + 1) % housing.images.Count;
    }
}
